#ifndef _SHOCO_INTERNAL
#error This header file is only to be included by 'shoco.c'.
#endif
#pragma once
/*
This file was generated by 'generate_compressor_model.py'
so don't edit this by hand. Also, do not include this file
anywhere. It is internal to 'shoco.c'. Include 'shoco.h'
if you want to use shoco in your project.
*/

#define MIN_CHR 36
#define MAX_CHR 88

static const char chrs_by_chr_id[32] = {
  ',', '0', '1', '2', '3', '.', '4', 'G', '5', 'P', '7', '6', '$', '8', '9', '*', 'M', 'R', 'T', 'E', 'A', 'L', 'N', 'W', 'C', 'B', 'S', 'O', 'V', 'I', 'H', 'D'
};

static const int8_t chr_ids_by_chr[256] = {
  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, -1, -1, -1, -1, -1, 15, -1, 0, -1, 5, -1, 1, 2, 3, 4, 6, 8, 11, 10, 13, 14, -1, -1, -1, -1, -1, -1, -1, 20, 25, 24, 31, 19, -1, 7, 30, 29, -1, -1, 21, 16, 22, 27, 9, -1, 17, 26, 18, -1, 28, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
};

static const int8_t successor_ids_by_chr_id_and_chr_id[32][32] = {
  {3, 0, 1, 2, 4, -1, 5, -1, 12, 10, -1, -1, -1, -1, -1, 14, 9, -1, 13, 7, 11, -1, 6, 8, 15, -1, -1, -1, -1, -1, -1, -1},
  {1, 0, 9, 6, 5, 2, 3, -1, 4, -1, 7, 10, -1, 11, 8, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1},
  {0, 6, 3, 4, 1, 2, 9, -1, 11, -1, 7, 5, -1, 8, 10, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1},
  {0, 7, 3, 1, 2, 5, 4, -1, 8, -1, 6, 12, -1, 10, 9, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 2, 3, 13, 8, 1, 5, -1, 14, -1, 7, 4, -1, 9, 10, 6, -1, -1, -1, -1, -1, -1, -1, -1, 11, -1, -1, -1, -1, -1, -1, 12},
  {-1, 0, 6, 1, 2, -1, 7, -1, 5, -1, 8, 3, -1, 4, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 7, 11, 3, 9, 1, 2, -1, 5, -1, 12, 4, -1, 8, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10},
  {4, -1, -1, -1, -1, -1, -1, 9, -1, 0, -1, -1, -1, -1, -1, -1, -1, 3, 5, -1, 7, 1, -1, 6, 8, -1, 2, -1, -1, -1, -1, -1},
  {0, 4, 1, 6, -1, 2, 3, -1, 7, -1, 8, -1, -1, 5, 10, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {-1, -1, -1, -1, -1, -1, -1, 0, -1, 6, -1, -1, -1, -1, -1, -1, 11, 1, 12, -1, -1, 3, -1, 5, 8, 2, -1, 4, 7, -1, -1, -1},
  {0, 2, 6, 11, 3, 1, 5, -1, 4, -1, 7, 12, -1, -1, 13, -1, -1, -1, -1, -1, 8, -1, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1},
  {0, 5, -1, 6, -1, 1, 8, -1, 3, -1, 2, 9, -1, 10, 4, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {-1, -1, -1, -1, -1, -1, -1, 0, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, -1, 1, 4, 3, 2, -1, -1, 5, -1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, 5, 1, 7, 6, 3, 2, -1, 8, -1, 9, 10, -1, 11, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {-1, 5, 3, 6, 2, -1, 7, -1, 4, -1, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, 8, -1, 5, -1, -1, -1, -1, 1, 2, -1, 7, -1, 6, -1, -1},
  {2, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, 0, 5, 1, 7, -1, -1, 9, -1, 6, -1, -1, -1, -1, 3, -1, -1},
  {0, -1, 9, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, 6, -1, -1, 2, 4, 11, 8, 10, -1, 1, -1, 7, -1, -1, -1, -1},
  {1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, 2, -1, 6, -1, -1, -1, 5, -1, -1, -1, -1, 3, -1, -1, -1, -1, 4},
  {0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 4, 6, 1, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, 3, -1, -1},
  {0, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, 6, 2, -1, -1, -1, 3, 1, -1, -1, -1, -1, -1, -1, -1, 5, -1, -1},
  {0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, 3},
  {0, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, 1, -1, -1, -1, 3, 5, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1},
  {0, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, 1, -1},
  {0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1, -1, -1, 2, -1, -1, -1, 1, -1, -1, -1, -1},
  {2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, 3, -1, 1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1},
  {1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, 3},
  {0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, -1, 3, -1, -1, 0, -1, -1, -1, 1, 4, -1, -1, -1, -1},
  {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
  {0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1}
};

static const int8_t chrs_by_chr_and_successor_id[MAX_CHR - MIN_CHR][16] = {
  {'G', 'P', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'7', '6', '3', '1', '5', '0', '2', '4', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'0', '1', '2', ',', '3', '4', 'N', 'E', 'W', 'M', 'P', 'A', '5', 'T', '*', 'C'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'0', '2', '3', '6', '8', '5', '1', '4', '7', '9', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'0', ',', '.', '4', '5', '3', '2', '7', '9', '1', '6', '8', '*', 'B', '\x00', '\x00'},
  {',', '3', '.', '1', '2', '6', '0', '7', '8', '4', '9', '5', 'B', '*', '\x00', '\x00'},
  {',', '2', '3', '1', '4', '.', '7', '0', '5', '9', '8', '*', '6', '\x00', '\x00', '\x00'},
  {',', '.', '0', '1', '6', '4', '*', '7', '3', '8', '9', 'C', 'D', '2', '5', '\x00'},
  {',', '.', '4', '2', '6', '5', '9', '0', '8', '3', 'D', '1', '7', '\x00', '\x00', '\x00'},
  {',', '1', '.', '4', '0', '8', '2', '5', '7', '*', '9', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {',', '.', '7', '5', '9', '0', '2', '*', '4', '6', '8', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {',', '.', '0', '3', '5', '4', '1', '7', 'A', 'B', 'F', '2', '6', '9', '\x00', '\x00'},
  {',', '1', '.', '3', '2', '5', '7', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {',', '1', '4', '.', '9', '0', '3', '2', '5', '7', '6', '8', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {',', 'T', '*', 'I', 'M', 'N', 'R', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {',', 'O', 'W', 'R', 'U', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {',', 'H', 'R', 'O', 'P', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {',', '*', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'G', ',', '*', 'S', 'D', 'L', 'R', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'P', 'L', 'S', 'R', ',', 'T', 'W', 'A', 'C', 'G', 'U', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'A', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'N', 'S', 'R', 'E', 'O', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {',', 'L', 'M', 'A', 'G', 'I', '*', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {',', 'C', 'B', '*', 'Z', 'E', 'I', 'O', 'R', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {',', 'T', 'S', 'D', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'I', ',', 'R', 'D', 'T', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'G', 'R', 'B', 'L', 'O', 'W', 'P', 'V', 'C', 'F', 'K', 'M', 'T', 'Y', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'M', 'T', ',', 'I', '0', 'R', 'C', 'E', '*', 'N', 'Y', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {'V', 'A', ',', 'T', 'M', 'Y', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {',', 'B', 'E', 'G', 'A', 'K', 'M', 'O', 'N', '1', 'W', 'L', '\x00', '\x00', '\x00', '\x00'},
  {'\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {',', 'T', '*', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'},
  {',', '*', 'C', 'E', 'P', 'A', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00', '\x00'}
};

#ifdef _MSC_VER
#pragma warning(push)
#pragma warning(disable: 4324)    // structure was padded due to __declspec(align())
#endif

typedef struct Pack {
    const uint32_t word;
    const unsigned int bytes_packed;
    const unsigned int bytes_unpacked;
    const unsigned int offsets[8];
    const int16_t _ALIGNED masks[8];
    const char header_mask;
    const char header;
} Pack;

#ifdef _MSC_VER
#pragma warning(pop)
#endif

#define PACK_COUNT 3
#define MAX_SUCCESSOR_N 7

static const Pack packs[PACK_COUNT] = {
  { 0x80000000, 1, 2, { 26, 24, 24, 24, 24, 24, 24, 24 }, { 15, 3, 0, 0, 0, 0, 0, 0 }, 0xc0, 0x80 },
  { 0xc0000000, 2, 4, { 25, 22, 19, 16, 16, 16, 16, 16 }, { 15, 7, 7, 7, 0, 0, 0, 0 }, 0xe0, 0xc0 },
  { 0xe0000000, 4, 8, { 23, 19, 15, 11, 8, 5, 2, 0 }, { 31, 15, 15, 15, 7, 7, 7, 3 }, 0xf0, 0xe0 }
};
